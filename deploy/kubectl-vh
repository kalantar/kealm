#!/bin/bash

# TODO - configure outside this script
#HOST_IP=172.31.37.22
#EXTERNAL_IP=18.221.76.241

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ "$#" -lt 2 ]; then
    echo "Usage: $(basename $0) create|delete|merge-kubeconfig|delete-kubeconfig|psql <vh name>"
    exit
fi

CMD=$1
name=$2

case $CMD in

  create)
    if [ "$HOST_IP" == "" ]; then
      echo "HOST_IP must be provided"
      exit -1
    fi 
    if [ "$name" != "vks1" ] && [ "$name" != "vks2" ] && [ "$name" != "vks3" ]; then
      echo "name must be one of {'vks1','vks2','vks3'}"
      exit -1
    fi 
    echo "creating vh $name"
    kubectl apply -f ${SCRIPT_DIR}/job/manifests
    sed "s/{{ .vksName }}/${name}/g; s/{{ .hostIP }}/${HOST_IP}/g; s/{{ .externalIP }}/${EXTERNAL_IP}/g" \
	  ${SCRIPT_DIR}/job/templates/vksjob.yaml | kubectl apply -f -
    exit
    ;;
  delete)
    kubectl delete ns ${name}-system
    kubectl delete job ${name}-job
    exit
    ;;

  merge-kubeconfig)
    cp ~/.kube/config ~/.kube/config.bak
    kubectl config unset users.${name}-admin &> /dev/null
    kubectl config unset contexts.${name} &> /dev/null
    kubectl config unset clusters.${name} &> /dev/null
    kubectl get secrets -n ${name}-system admin-kubeconfig -o jsonpath='{.data.admin\.kubeconfig}' | base64 -d > /tmp/${name}
    KUBECONFIG=~/.kube/config:/tmp/${name} kubectl config view --flatten > /tmp/config
    mv /tmp/config ~/.kube/config 
    #rm ~/.kube/config.bak # optionally - remove backup
    exit
    ;;

  delete-kubeconfig)
    kubectl config unset users.${name}-admin
    kubectl config unset contexts.${name}
    kubectl config unset clusters.${name}
    exit
    ;;
  psql)
    kubectl delete pod mypsql-postgresql-client --namespace vks-system &>/dev/null
    POSTGRES_PASSWORD=$(kubectl get secret --namespace vks-system mypsql-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
    kubectl run mypsql-postgresql-client --rm --tty -i --restart='Never' --namespace vks-system --image docker.io/bitnami/postgresql:11.14.0-debian-10-r28 --env="PGPASSWORD=$POSTGRES_PASSWORD" --command -- psql --host mypsql-postgresql -U postgres -d postgres -p 5432
    exit
    ;;    
  *)
    echo "Unknown command"
    exit -1
    ;;
esac
